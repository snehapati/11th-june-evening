<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-12T11:49:02 IST" name="Suite" finished-at="2022-10-12T11:51:10 IST" duration-ms="128227">
    <groups>
    </groups>
    <test started-at="2022-10-12T11:49:02 IST" name="Test" finished-at="2022-10-12T11:51:10 IST" duration-ms="128227">
      <class name="testclasses.VerifyUserCanGetLowestPrice">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:49 IST" name="beforeClass" finished-at="2022-10-12T11:50:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:49 IST" name="beforeMethod" finished-at="2022-10-12T11:50:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanSearchProduct()[pri:1, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:49 IST" name="VerifyUserCanSearchProduct" finished-at="2022-10-12T11:50:50 IST" duration-ms="953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanSearchProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:50 IST" name="afterMethod" finished-at="2022-10-12T11:50:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanSearchProduct status=SUCCESS method=VerifyUserCanGetLowestPrice.VerifyUserCanSearchProduct()[pri:1, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:50 IST" name="beforeMethod" finished-at="2022-10-12T11:50:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanGetLowestprice()[pri:2, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:50 IST" name="VerifyUserCanGetLowestprice" finished-at="2022-10-12T11:50:58 IST" duration-ms="7430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanGetLowestprice -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:58 IST" name="afterMethod" finished-at="2022-10-12T11:50:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanGetLowestprice status=SUCCESS method=VerifyUserCanGetLowestPrice.VerifyUserCanGetLowestprice()[pri:2, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testclasses.VerifyUserCanGetLowestPrice@72e5a8e]" started-at="2022-10-12T11:50:58 IST" name="afterClass" finished-at="2022-10-12T11:50:58 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testclasses.VerifyUserCanGetLowestPrice -->
      <class name="testclasses.VerifyUserCanLogin">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testclasses.VerifyUserCanLogin@59505b48]" started-at="2022-10-12T11:49:02 IST" name="beforeClass" finished-at="2022-10-12T11:50:47 IST" duration-ms="104703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanLogin@59505b48]" started-at="2022-10-12T11:50:47 IST" name="beforeMethod" finished-at="2022-10-12T11:50:47 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanLogIn()[pri:1, instance:testclasses.VerifyUserCanLogin@59505b48]" started-at="2022-10-12T11:50:47 IST" name="VerifyUserCanLogIn" finished-at="2022-10-12T11:50:48 IST" duration-ms="1715" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Profile Name is not matching did not expect [Sneha] but found [Sneha]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Profile Name is not matching did not expect [Sneha] but found [Sneha]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at testclasses.VerifyUserCanLogin.VerifyUserCanLogIn(VerifyUserCanLogin.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanLogIn -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanLogin@59505b48]" started-at="2022-10-12T11:50:48 IST" name="afterMethod" finished-at="2022-10-12T11:50:49 IST" duration-ms="563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanLogIn status=FAILURE method=VerifyUserCanLogin.VerifyUserCanLogIn()[pri:1, instance:testclasses.VerifyUserCanLogin@59505b48] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testclasses.VerifyUserCanLogin@59505b48]" started-at="2022-10-12T11:50:49 IST" name="afterClass" finished-at="2022-10-12T11:50:49 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testclasses.VerifyUserCanLogin -->
      <class name="testclasses.VerifyUserCanAddAddress">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:50:58 IST" name="beforeClass" finished-at="2022-10-12T11:50:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:50:58 IST" name="beforeMethod" finished-at="2022-10-12T11:50:58 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanSeeProfilePage()[pri:1, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:50:58 IST" name="verifyUserCanSeeProfilePage" finished-at="2022-10-12T11:51:08 IST" duration-ms="10419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanSeeProfilePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="afterMethod" finished-at="2022-10-12T11:51:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanSeeProfilePage status=SUCCESS method=VerifyUserCanAddAddress.verifyUserCanSeeProfilePage()[pri:1, instance:testclasses.VerifyUserCanAddAddress@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="beforeMethod" finished-at="2022-10-12T11:51:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddress()[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="addAddress" finished-at="2022-10-12T11:51:08 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddress -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="afterMethod" finished-at="2022-10-12T11:51:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddress status=SUCCESS method=VerifyUserCanAddAddress.addAddress()[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="beforeMethod" finished-at="2022-10-12T11:51:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:08 IST" name="addAddresses" data-provider="addressData" finished-at="2022-10-12T11:51:09 IST" duration-ms="890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sneha Patil]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9021457146]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[413512]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Kore Garden]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Patil Niwas, Near Suvarna Hanuman, Moti Nagar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddresses -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:09 IST" name="afterMethod" finished-at="2022-10-12T11:51:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddresses status=SUCCESS method=VerifyUserCanAddAddress.addAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:09 IST" name="beforeMethod" finished-at="2022-10-12T11:51:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:09 IST" name="addAddresses" data-provider="addressData" finished-at="2022-10-12T11:51:10 IST" duration-ms="927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sneha Patil]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9021457146]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[412105]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Indrayani Park]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Flat no.207,Shobha Empire, Gaikwad Wasti, Moshi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddresses -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:10 IST" name="afterMethod" finished-at="2022-10-12T11:51:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddresses status=SUCCESS method=VerifyUserCanAddAddress.addAddresses(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testclasses.VerifyUserCanAddAddress@54e1c68b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testclasses.VerifyUserCanAddAddress@54e1c68b]" started-at="2022-10-12T11:51:10 IST" name="afterClass" finished-at="2022-10-12T11:51:10 IST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testclasses.VerifyUserCanAddAddress -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
